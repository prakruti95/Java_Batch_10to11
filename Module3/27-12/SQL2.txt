Asc
Desc

int data type -> number wise
varcahr data type -> alphabet wise


Select
->all
->row
->col
->order wise

DCL:
rollback,commit

Functions:
1)Agreegate Function:
MAX->select MAX(p_price) from products
MIN->select MIN(p_price) from products
SUM->select SUM(p_price) from products
AVG->select AVG(p_price) from products
COUNT->select COUNT(p_price) from products
FIRST->SELECT * FROM products LIMIT 1;
LAST->SELECT * FROM products ORDER by p_price DESC LIMIT 1;

2)Scalar Function:
UCASE() - Converts a field to upper case
LCASE() - Converts a field to lower case
MID() - Extract characters from a text field
LEN() - Returns the length of a text field
ROUND() - Rounds a numeric field to the number of decimals specified
NOW() - Returns the current system date and time
FORMAT() - Formats how a field is to be displayed


SELECT UCASE(NAME) FROM Students; 
SELECT LCASE(NAME) FROM Students; 
SELECT MID(NAME,1,4) FROM Students; 
SELECT LENGTH(NAME) FROM Stuents;
SELECT ROUND(MARKS,0) FROM table_name;
SELECT NAME, NOW() AS DateTime FROM Students
SELECT NAME, FORMAT(Now(),'YYYY-MM-DD') AS Date FROM Students;

Constraints:
Primary Key -> data duplication avoid
Unique Key -> data uniquely identify
Foreign Key -> it's work with refrence [Joins]

SELECT * FROM address LEFT JOIN students ON address.id = students.id
UNION
SELECT * FROM address RIGHT JOIN students ON address.id = students.id

Procedure:
->insert,update,delete,select,create

DELIMITER //

	CREATE PROCEDURE selectproc(INOUT myid int)
    
    BEGIN
    	SELECT * FROM students WHERE id=myid;
    END //

DELIMITER ;



Trigger:
INSERT,UPDATE,DELETE

BEFORE INSERT
AFTER INSERT
BEFORE UPDATE
AFTER UPDATE
BEFORE DELETE
AFTER DELETE










